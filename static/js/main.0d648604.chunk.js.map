{"version":3,"sources":["Form/index.js","List/index.js","Section/index.js","Buttons/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","autoFocus","List","props","tasks","map","task","done","hideDoneTasks","content","id","Section","title","extraHeaderContent","body","Buttons","length","Fragment","disabled","every","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySASeA,EAPF,kBACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOC,YAAY,wBAAwBD,UAAU,cAAcE,WAAS,IAC5E,wBAAQF,UAAU,sBAAlB,+BCkBOG,G,MArBF,SAACC,GAAD,OACT,oBAAIJ,UAAU,OAAd,SACKI,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBAEIP,UAAS,iCAA4BO,EAAKC,MAAQJ,EAAMK,cAAgB,qBAAuB,IAFnG,UAII,wBAAQT,UAAU,eAAlB,SACKO,EAAKC,KAAO,SAAM,KAEvB,sBAAMR,UAAS,oBAAeO,EAAKC,KAAO,oBAAsB,IAAhE,SACKD,EAAKG,UAEV,wBAAQV,UAAU,oCAAlB,4BATKO,EAAKI,WCMXC,G,MAVC,SAACR,GAAD,OACZ,0BAASJ,UAAU,UAAnB,UACI,yBAAQA,UAAU,kBAAlB,UACI,oBAAIA,UAAU,iBAAd,SAAgCI,EAAMS,QACrCT,EAAMU,sBAEVV,EAAMW,UCaAC,G,MAlBC,SAACZ,GAAD,OACZ,qBAAKJ,UAAU,UAAf,SACKI,EAAMC,MAAMY,OAAS,GAClB,eAAC,IAAMC,SAAP,WACI,wBAAQlB,UAAU,kBAAlB,SACKI,EAAMK,cAAgB,4BAAoB,yBAE/C,wBACIT,UAAU,kBACVmB,SAAUf,EAAMC,MAAMe,OAAO,SAAAb,GAAI,OAAIA,EAAKC,QAF9C,0CCJDa,EANA,SAACjB,GAAD,OACX,iCACI,6BAAKA,EAAMS,WCMJS,G,MANG,SAAClB,GAAD,OACd,sBAAMJ,UAAU,YAAhB,SACKI,EAAMmB,aCGTlB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,8BAAqBF,MAAM,GAC7C,CAAEG,GAAI,EAAGD,QAAS,wBAAeF,MAAM,IAuB1BgB,MAlBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQX,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNE,KAAM,cAAC,EAAD,MAGR,cAAC,EAAD,CACEF,MAAM,mBACNE,KAAM,cAAC,EAAD,CAAMV,MAAOA,EAAOI,cAbZ,QAcdK,mBAAoB,cAAC,EAAD,CAAST,MAAOA,EAAOI,cAd7B,cCAPgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d648604.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"form\">\r\n        <input placeholder=\"Co jest do zrobienia?\" className=\"form__field\" autoFocus />\r\n        <button className=\"form__addTaskButton\">Dodaj zadanie</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst List = (props) => (\r\n    <ul className=\"list\">\r\n        {props.tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`list__item js-listItem ${task.done && props.hideDoneTasks ? \"list__item--hidden\" : \"\"}`}\r\n            >\r\n                <button className=\"list__button\">\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </button>\r\n                <span className={`list__task${task.done ? \" list__task--done\" : \"\"}`}>\r\n                    {task.content}\r\n                </span>\r\n                <button className=\"list__button list__button--remove\">\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default List;","import \"./style.css\";\r\n\r\nconst Section = (props) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__title\">{props.title}</h2>\r\n            {props.extraHeaderContent}\r\n        </header>\r\n        {props.body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = (props) => (\r\n    <div className=\"buttons\">\r\n        {props.tasks.length > 0 && (\r\n            <React.Fragment>\r\n                <button className=\"buttons__button\">\r\n                    {props.hideDoneTasks ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n                </button>\r\n                <button\r\n                    className=\"buttons__button\"\r\n                    disabled={props.tasks.every((task => task.done))}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </button>\r\n            </React.Fragment>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","const Header = (props) => (\r\n    <header>\r\n        <h1>{props.title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = (props) => (\r\n    <main className=\"container\">\r\n        {props.children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport List from \"./List\";\nimport Section from \"./Section\";\nimport Buttons from \"./Buttons\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"PrzejÅ›Ä‡ na Reacta\", done: false },\n  { id: 2, content: \"ZjeÅ›Ä‡ obiad\", done: true },\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={<List tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n      />\n    </Container>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}